apiVersion: 1

groups:
    - orgId: 1
      name: kube-apiserver-slos
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        - uid: KubeAPIErrorBudgetBurnCrit1h
          title: KubeAPIErrorBudgetBurn
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum by(cluster) (apiserver_request:burnrate1h) > (14.40 * 0.01000)
                    and on(cluster)
                    sum by(cluster) (apiserver_request:burnrate5m) > (14.40 * 0.01000)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 2m
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          labels:
            __converted_prometheus_rule__: "true"
            long: 1h
            severity: critical
            short: 5m
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeAPIErrorBudgetBurnCrit6h
          title: KubeAPIErrorBudgetBurn
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum by(cluster) (apiserver_request:burnrate6h) > (6.00 * 0.01000)
                    and on(cluster)
                    sum by(cluster) (apiserver_request:burnrate30m) > (6.00 * 0.01000)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          labels:
            __converted_prometheus_rule__: "true"
            long: 6h
            severity: critical
            short: 30m
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeAPIErrorBudgetBurnWarn1d
          title: KubeAPIErrorBudgetBurn
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum by(cluster) (apiserver_request:burnrate1d) > (3.00 * 0.01000)
                    and on(cluster)
                    sum by(cluster) (apiserver_request:burnrate2h) > (3.00 * 0.01000)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 1h
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          labels:
            __converted_prometheus_rule__: "true"
            long: 1d
            severity: warning
            short: 2h
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeAPIErrorBudgetBurnWarn3d
          title: KubeAPIErrorBudgetBurn
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum by(cluster) (apiserver_request:burnrate3d) > (1.00 * 0.01000)
                    and on(cluster)
                    sum by(cluster) (apiserver_request:burnrate6h) > (1.00 * 0.01000)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 3h
          annotations:
            description: The API server is burning too much error budget.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          labels:
            __converted_prometheus_rule__: "true"
            long: 3d
            severity: warning
            short: 6h
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-apps
      folder: kubernetes-monitoring
      interval: 1m
      rules:

        - uid: KubePodCrashLooping
          title: KubePodCrashLooping
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="integrations/kubernetes/kube-state-metrics"}[5m]) >= 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is in waiting state (reason: "CrashLoopBackOff").'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping
            summary: Pod is crash looping.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubePodNotReady
          title: KubePodNotReady
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum by (namespace, pod, cluster) (
                      max by(namespace, pod, cluster) (
                        kube_pod_status_phase{job="integrations/kubernetes/kube-state-metrics", phase=~"Pending|Unknown|Failed"}
                      ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (
                        1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!="Job"})
                      )
                    ) > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready
            summary: Pod has been in a non-ready state for more than 15 minutes.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeDeploymentGenerationMismatch
          title: KubeDeploymentGenerationMismatch
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_deployment_status_observed_generation{job="integrations/kubernetes/kube-state-metrics"}
                      !=
                    kube_deployment_metadata_generation{job="integrations/kubernetes/kube-state-metrics"}
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch
            summary: Deployment generation mismatch due to possible roll-back
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeDeploymentReplicasMismatch
          title: KubeDeploymentReplicasMismatch
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      kube_deployment_spec_replicas{job="integrations/kubernetes/kube-state-metrics"}
                        >
                      kube_deployment_status_replicas_available{job="integrations/kubernetes/kube-state-metrics"}
                    ) and (
                      changes(kube_deployment_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[10m])
                        ==
                      0
                    )
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch
            summary: Deployment has not matched the expected number of replicas.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeDeploymentRolloutStuck
          title: KubeDeploymentRolloutStuck
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_deployment_status_condition{condition="Progressing", status="false",job="integrations/kubernetes/kube-state-metrics"}
                    != 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment }} is not progressing for longer than 15 minutes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentrolloutstuck
            summary: Deployment rollout is not progressing.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeStatefulSetReplicasMismatch
          title: KubeStatefulSetReplicasMismatch
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      kube_statefulset_status_replicas_ready{job="integrations/kubernetes/kube-state-metrics"}
                        !=
                      kube_statefulset_replicas{job="integrations/kubernetes/kube-state-metrics"}
                    ) and (
                      changes(kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[10m])
                        ==
                      0
                    )
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch
            summary: StatefulSet has not matched the expected number of replicas.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeStatefulSetGenerationMismatch
          title: KubeStatefulSetGenerationMismatch
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_statefulset_status_observed_generation{job="integrations/kubernetes/kube-state-metrics"}
                      !=
                    kube_statefulset_metadata_generation{job="integrations/kubernetes/kube-state-metrics"}
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch
            summary: StatefulSet generation mismatch due to possible roll-back
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeStatefulSetUpdateNotRolledOut
          title: KubeStatefulSetUpdateNotRolledOut
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      max by(namespace, statefulset, job, cluster) (
                        kube_statefulset_status_current_revision{job="integrations/kubernetes/kube-state-metrics"}
                          unless
                        kube_statefulset_status_update_revision{job="integrations/kubernetes/kube-state-metrics"}
                      )
                        * on(namespace, statefulset, job, cluster)
                      (
                        kube_statefulset_replicas{job="integrations/kubernetes/kube-state-metrics"}
                          !=
                        kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}
                      )
                    )  and on(namespace, statefulset, job, cluster) (
                      changes(kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[5m])
                        ==
                      0
                    )
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout
            summary: StatefulSet update has not been rolled out.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1

        - uid: KubeDaemonSetRolloutStuck
          title: KubeDaemonSetRolloutStuck
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      (
                        kube_daemonset_status_current_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
                         !=
                        kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
                      ) or (
                        kube_daemonset_status_number_misscheduled{job="integrations/kubernetes/kube-state-metrics"}
                         !=
                        0
                      ) or (
                        kube_daemonset_status_updated_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
                         !=
                        kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
                      ) or (
                        kube_daemonset_status_number_available{job="integrations/kubernetes/kube-state-metrics"}
                         !=
                        kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
                      )
                    ) and (
                      changes(kube_daemonset_status_updated_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}[5m])
                        ==
                      0
                    )
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15m.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck
            summary: DaemonSet rollout is stuck.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1

        - uid: KubeContainerWaiting
          title: KubeContainerWaiting
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_pod_container_status_waiting_reason{reason!="CrashLoopBackOff", job="integrations/kubernetes/kube-state-metrics"} > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 1h
          annotations:
            description: 'pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on container {{ $labels.container}} has been in waiting state for longer than 1 hour. (reason: "{{ $labels.reason }}").'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting
            summary: Pod container waiting longer than 1 hour
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1

        - uid: KubeDaemonSetNotScheduled
          title: KubeDaemonSetNotScheduled
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
                      -
                    kube_daemonset_status_current_number_scheduled{job="integrations/kubernetes/kube-state-metrics"} > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 10m
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled
            summary: DaemonSet pods are not scheduled.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1

        - uid: KubeDaemonSetMisScheduled
          title: KubeDaemonSetMisScheduled
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_daemonset_status_number_misscheduled{job="integrations/kubernetes/kube-state-metrics"} > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled
            summary: DaemonSet pods are misscheduled.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1

        - uid: KubeJobNotCompleted
          title: KubeJobNotCompleted
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job="integrations/kubernetes/kube-state-metrics"}
                      and
                    kube_job_status_active{job="integrations/kubernetes/kube-state-metrics"} > 0) > 43200
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than {{ "43200" | humanizeDuration }} to complete.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobnotcompleted
            summary: Job did not complete in time
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeJobFailed
          title: KubeJobFailed
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_job_failed{job="integrations/kubernetes/kube-state-metrics"}  > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed
            summary: Job failed to complete.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeHpaReplicasMismatch
          title: KubeHpaReplicasMismatch
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (kube_horizontalpodautoscaler_status_desired_replicas{job="integrations/kubernetes/kube-state-metrics"}
                      !=
                    kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"})
                      and
                    (kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
                      >
                    kube_horizontalpodautoscaler_spec_min_replicas{job="integrations/kubernetes/kube-state-metrics"})
                      and
                    (kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
                      <
                    kube_horizontalpodautoscaler_spec_max_replicas{job="integrations/kubernetes/kube-state-metrics"})
                      and
                    changes(kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}[15m]) == 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has not matched the desired number of replicas for longer than 15 minutes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch
            summary: HPA has not matched desired number of replicas.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeHpaMaxedOut
          title: KubeHpaMaxedOut
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
                      ==
                    kube_horizontalpodautoscaler_spec_max_replicas{job="integrations/kubernetes/kube-state-metrics"}
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has been running at max replicas for longer than 15 minutes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout
            summary: HPA is running at max replicas
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubePdbNotEnoughHealthyPods
          title: KubePdbNotEnoughHealthyPods
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      kube_poddisruptionbudget_status_desired_healthy{job="integrations/kubernetes/kube-state-metrics"}
                      -
                      kube_poddisruptionbudget_status_current_healthy{job="integrations/kubernetes/kube-state-metrics"}
                    )
                    > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: PDB {{ $labels.namespace }}/{{ $labels.poddisruptionbudget }} expects {{ $value }} more healthy pods. The desired number of healthy pods has not been met for at least 15m.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepdbnotenoughhealthypods
            summary: PDB does not have enough healthy pods.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-resources
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubeCPUOvercommit
          title: KubeCPUOvercommit
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum(namespace_cpu:kube_pod_container_resource_requests:sum{}) - (sum(kube_node_status_allocatable{resource="cpu", job="integrations/kubernetes/kube-state-metrics"}) - max(kube_node_status_allocatable{resource="cpu", job="integrations/kubernetes/kube-state-metrics"})) > 0
                    and
                    (sum(kube_node_status_allocatable{resource="cpu", job="integrations/kubernetes/kube-state-metrics"}) - max(kube_node_status_allocatable{resource="cpu", job="integrations/kubernetes/kube-state-metrics"})) > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 10m
          annotations:
            description: Cluster has overcommitted CPU resource requests for Pods by {{ $value }} CPU shares and cannot tolerate node failure.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit
            summary: Cluster has overcommitted CPU resource requests.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeMemoryOvercommit
          title: KubeMemoryOvercommit
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum(namespace_memory:kube_pod_container_resource_requests:sum{}) - (sum(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}) - max(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"})) > 0
                    and
                    (sum(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}) - max(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"})) > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 10m
          annotations:
            description: Cluster has overcommitted memory resource requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node failure.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit
            summary: Cluster has overcommitted memory resource requests.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeCPUQuotaOvercommit
          title: KubeCPUQuotaOvercommit
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum(min without(resource) (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard", resource=~"(cpu|requests.cpu)"}))
                      /
                    sum(kube_node_status_allocatable{resource="cpu", job="integrations/kubernetes/kube-state-metrics"})
                      > 1.5
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: Cluster has overcommitted CPU resource requests for Namespaces.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit
            summary: Cluster has overcommitted CPU resource requests.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeMemoryQuotaOvercommit
          title: KubeMemoryQuotaOvercommit
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum(min without(resource) (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard", resource=~"(memory|requests.memory)"}))
                      /
                    sum(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"})
                      > 1.5
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: Cluster has overcommitted memory resource requests for Namespaces.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit
            summary: Cluster has overcommitted memory resource requests.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeQuotaAlmostFull
          title: KubeQuotaAlmostFull
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
                      / ignoring(instance, job, type)
                    (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
                      > 0.9 < 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull
            summary: Namespace quota is going to be full.
          labels:
            __converted_prometheus_rule__: "true"
            severity: info
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeQuotaFullyUsed
          title: KubeQuotaFullyUsed
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
                      / ignoring(instance, job, type)
                    (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
                      == 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused
            summary: Namespace quota is fully used.
          labels:
            __converted_prometheus_rule__: "true"
            severity: info
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeQuotaExceeded
          title: KubeQuotaExceeded
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
                      / ignoring(instance, job, type)
                    (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
                      > 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded
            summary: Namespace quota has exceeded the limits.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: CPUThrottlingHigh
          title: CPUThrottlingHigh
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum(increase(container_cpu_cfs_throttled_periods_total{container!="", job="integrations/kubernetes/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
                      / on (cluster, namespace, pod, container, instance) group_left
                    sum(increase(container_cpu_cfs_periods_total{job="integrations/kubernetes/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
                      > ( 25 / 100 )
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: '{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh
            summary: Processes experience elevated CPU throttling.
          labels:
            __converted_prometheus_rule__: "true"
            severity: info
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-storage
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubePersistentVolumeFillingUpCrit
          title: KubePersistentVolumeFillingUp
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}
                        /
                      kubelet_volume_stats_capacity_bytes{job="integrations/kubernetes/kubelet"}
                    ) < 0.03
                    and
                    kubelet_volume_stats_used_bytes{job="integrations/kubernetes/kubelet"} > 0
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 1m
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster {{ . }} {{- end }} is only {{ $value | humanizePercentage }} free.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubePersistentVolumeFillingUpWarn
          title: KubePersistentVolumeFillingUp
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}
                        /
                      kubelet_volume_stats_capacity_bytes{job="integrations/kubernetes/kubelet"}
                    ) < 0.15
                    and
                    kubelet_volume_stats_used_bytes{job="integrations/kubernetes/kubelet"} > 0
                    and
                    predict_linear(kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}[6h], 4 * 24 * 3600) < 0
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 1h
          annotations:
            description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster {{ . }} {{- end }} is expected to fill up within four days. Currently {{ $value | humanizePercentage }} is available.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubePersistentVolumeInodesFillingUpCrit
          title: KubePersistentVolumeInodesFillingUp
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}
                        /
                      kubelet_volume_stats_inodes{job="integrations/kubernetes/kubelet"}
                    ) < 0.03
                    and
                    kubelet_volume_stats_inodes_used{job="integrations/kubernetes/kubelet"} > 0
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 1m
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster {{ . }} {{- end }} only has {{ $value | humanizePercentage }} free inodes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeinodesfillingup
            summary: PersistentVolumeInodes are filling up.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubePersistentVolumeInodesFillingUpWarn
          title: KubePersistentVolumeInodesFillingUp
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}
                        /
                      kubelet_volume_stats_inodes{job="integrations/kubernetes/kubelet"}
                    ) < 0.15
                    and
                    kubelet_volume_stats_inodes_used{job="integrations/kubernetes/kubelet"} > 0
                    and
                    predict_linear(kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}[6h], 4 * 24 * 3600) < 0
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
                    unless on(cluster, namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 1h
          annotations:
            description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster {{ . }} {{- end }} is expected to run out of inodes within four days. Currently {{ $value | humanizePercentage }} of its inodes are free.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeinodesfillingup
            summary: PersistentVolumeInodes are filling up.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubePersistentVolumeErrors
          title: KubePersistentVolumeErrors
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="integrations/kubernetes/kube-state-metrics"} > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: The persistent volume {{ $labels.persistentvolume }} {{ with $labels.cluster -}} on Cluster {{ . }} {{- end }} has status {{ $labels.phase }}.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors
            summary: PersistentVolume is having issues with provisioning.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-system
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubeVersionMismatch
          title: KubeVersionMismatch
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"git_version","$1","git_version","(v[0-9]*.[0-9]*).*"))) > 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: There are {{ $value }} different semantic versions of Kubernetes components running.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch
            summary: Different semantic versions of Kubernetes components running.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeClientErrors
          title: KubeClientErrors
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (sum(rate(rest_client_requests_total{job="integrations/kubernetes/apiserver",code=~"5.."}[5m])) by (cluster, instance, job, namespace)
                      /
                    sum(rate(rest_client_requests_total{job="integrations/kubernetes/apiserver"}[5m])) by (cluster, instance, job, namespace))
                    > 0.01
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors
            summary: Kubernetes API server client is experiencing errors.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-system-apiserver
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubeClientCertificateExpirationWarn
          title: KubeClientCertificateExpiration
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="integrations/kubernetes/apiserver"}[5m]))) < 604800
                    and
                    on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="integrations/kubernetes/apiserver"} > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: A client certificate used to authenticate to kubernetes apiserver is expiring in less than 7.0 days.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeClientCertificateExpirationCrit
          title: KubeClientCertificateExpiration
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="integrations/kubernetes/apiserver"}[5m]))) < 86400
                    and
                    on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="integrations/kubernetes/apiserver"} > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: A client certificate used to authenticate to kubernetes apiserver is expiring in less than 24.0 hours.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeAggregatedAPIErrors
          title: KubeAggregatedAPIErrors
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum by(cluster, instance, name, reason)(increase(aggregator_unavailable_apiservice_total{job="integrations/kubernetes/apiserver"}[1m])) > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 10m
          annotations:
            description: Kubernetes aggregated API {{ $labels.instance }}/{{ $labels.name }} has reported {{ $labels.reason }} errors.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeaggregatedapierrors
            summary: Kubernetes aggregated API has reported errors.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeAggregatedAPIDown
          title: KubeAggregatedAPIDown
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job="integrations/kubernetes/apiserver"}[10m]))) * 100 < 85
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace }} has been only {{ $value | humanize }}% available over the last 10m.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeaggregatedapidown
            summary: Kubernetes aggregated API is down.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeAPIDown
          title: KubeAPIDown
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    absent(up{job="integrations/kubernetes/apiserver"} == 1)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: KubeAPI has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown
            summary: Target disappeared from Prometheus target discovery.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeAPITerminatedRequests
          title: KubeAPITerminatedRequests
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum by(cluster) (rate(apiserver_request_terminations_total{job="integrations/kubernetes/apiserver"}[10m])) / ( sum by(cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver"}[10m])) + sum by(cluster) (rate(apiserver_request_terminations_total{job="integrations/kubernetes/apiserver"}[10m])) ) > 0.20
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: The kubernetes apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapiterminatedrequests
            summary: The kubernetes apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-system-controller-manager
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubeControllerManagerDown
          title: KubeControllerManagerDown
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    absent(up{job="kube-controller-manager"} == 1)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: KubeControllerManager has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown
            summary: Target disappeared from Prometheus target discovery.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-system-kube-proxy
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubeProxyDown
          title: KubeProxyDown
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    absent(up{job="integrations/kubernetes/kube-proxy"} == 1)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: KubeProxy has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeproxydown
            summary: Target disappeared from Prometheus target discovery.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-system-kubelet
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubeNodeNotReady
          title: KubeNodeNotReady
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",condition="Ready",status="true"} == 0
                    and on (cluster, node)
                    kube_node_spec_unschedulable{job="integrations/kubernetes/kube-state-metrics"} == 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: '{{ $labels.node }} has been unready for more than 15 minutes.'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready
            summary: Node is not ready.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeNodePressure
          title: KubeNodePressure
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",condition=~"(MemoryPressure|DiskPressure|PIDPressure)",status="true"} == 1
                    and on (cluster, node)
                    kube_node_spec_unschedulable{job="integrations/kubernetes/kube-state-metrics"} == 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 10m
          annotations:
            description: '{{ $labels.node }} has active Condition {{ $labels.condition }}. This is caused by resource usage exceeding eviction thresholds.'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodepressure
            summary: Node has as active Condition.
          labels:
            __converted_prometheus_rule__: "true"
            severity: info
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeNodeUnreachable
          title: KubeNodeUnreachable
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (kube_node_spec_taint{job="integrations/kubernetes/kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="integrations/kubernetes/kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: '{{ $labels.node }} is unreachable and some workloads may be rescheduled.'
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable
            summary: Node is unreachable.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletTooManyPods
          title: KubeletTooManyPods
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    (
                      max by (cluster, instance) (
                        kubelet_running_pods{job="integrations/kubernetes/kubelet"} > 1
                      )
                      * on (cluster, instance) group_left(node)
                      max by (cluster, instance, node) (
                        kubelet_node_name{job="integrations/kubernetes/kubelet"}
                      )
                    )
                    / on (cluster, node) group_left()
                    max by (cluster, node) (
                      kube_node_status_capacity{job="integrations/kubernetes/kube-state-metrics", resource="pods"} != 1
                    ) > 0.95
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods
            summary: Kubelet is running at capacity.
          labels:
            __converted_prometheus_rule__: "true"
            severity: info
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeNodeReadinessFlapping
          title: KubeNodeReadinessFlapping
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum(changes(kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",status="true",condition="Ready"}[15m])) by (cluster, node) > 2
                    and on (cluster, node)
                    kube_node_spec_unschedulable{job="integrations/kubernetes/kube-state-metrics"} == 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping
            summary: Node readiness status is flapping.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeNodeEviction
          title: KubeNodeEviction
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    sum(rate(kubelet_evictions{job="integrations/kubernetes/kubelet"}[15m])) by(cluster, eviction_signal, instance)
                    * on (cluster, instance) group_left(node)
                    max by (cluster, instance, node) (
                      kubelet_node_name{job="integrations/kubernetes/kubelet"}
                    )
                    > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          annotations:
            description: Node {{ $labels.node }} is evicting Pods due to {{ $labels.eviction_signal }}.  Eviction occurs when eviction thresholds are crossed, typically caused by Pods exceeding RAM/ephemeral-storage limits.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeeviction
            summary: Node is evicting pods.
          labels:
            __converted_prometheus_rule__: "true"
            severity: info
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletPlegDurationHigh
          title: KubeletPlegDurationHigh
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 5m
          annotations:
            description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh
            summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletPodStartUpLatencyHigh
          title: KubeletPodStartUpLatencyHigh
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le)) * on(cluster, instance) group_left(node) kubelet_node_name{job="integrations/kubernetes/kubelet"} > 60
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh
            summary: Kubelet Pod startup latency is too high.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletClientCertificateExpirationWarn
          title: KubeletClientCertificateExpiration
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kubelet_certificate_manager_client_ttl_seconds < 604800
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletClientCertificateExpirationCrit
          title: KubeletClientCertificateExpiration
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kubelet_certificate_manager_client_ttl_seconds < 86400
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletServerCertificateExpirationWarn
          title: KubeletServerCertificateExpiration
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kubelet_certificate_manager_server_ttl_seconds < 604800
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletServerCertificateExpirationCrit
          title: KubeletServerCertificateExpiration
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    kubelet_certificate_manager_server_ttl_seconds < 86400
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletClientCertificateRenewalErrors
          title: KubeletClientCertificateRenewalErrors
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its client certificate ({{ $value | humanize }} errors in the last 5 minutes).
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificaterenewalerrors
            summary: Kubelet has failed to renew its client certificate.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletServerCertificateRenewalErrors
          title: KubeletServerCertificateRenewalErrors
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    increase(kubelet_server_expiration_renew_errors[5m]) > 0
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its server certificate ({{ $value | humanize }} errors in the last 5 minutes).
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificaterenewalerrors
            summary: Kubelet has failed to renew its server certificate.
          labels:
            __converted_prometheus_rule__: "true"
            severity: warning
          isPaused: false
          missing_series_evals_to_resolve: 1
        
        - uid: KubeletDown
          title: KubeletDown
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    absent(up{job="integrations/kubernetes/kubelet"} == 1)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: Kubelet has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown
            summary: Target disappeared from Prometheus target discovery.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
    - orgId: 1
      name: kubernetes-system-scheduler
      folder: kubernetes-monitoring
      interval: 1m
      rules:
        
        - uid: KubeSchedulerDown
          title: KubeSchedulerDown
          condition: threshold
          data:
            - refId: query
              queryType: prometheus
              relativeTimeRange:
                from: 660
                to: 60
              datasourceUid: mimir
              model:
                datasource:
                    type: prometheus
                    uid: mimir
                expr: |
                    absent(up{job="kube-scheduler"} == 1)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                range: false
                refId: query
            - refId: prometheus_math
              queryType: math
              datasourceUid: __expr__
              model:
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: is_number($query) || is_nan($query) || is_inf($query)
                intervalMs: 1000
                maxDataPoints: 43200
                refId: prometheus_math
                type: math
            - refId: threshold
              queryType: threshold
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                datasource:
                    IsPrunable: false
                    access: ""
                    apiVersion: ""
                    basicAuth: false
                    basicAuthUser: ""
                    created: "0001-01-01T00:00:00Z"
                    database: ""
                    id: -100
                    isDefault: false
                    jsonData: {}
                    name: __expr__
                    readOnly: false
                    secureJsonData: {}
                    type: __expr__
                    uid: __expr__
                    updated: "0001-01-01T00:00:00Z"
                    url: ""
                    user: ""
                    withCredentials: false
                expression: prometheus_math
                intervalMs: 1000
                maxDataPoints: 43200
                refId: threshold
                type: threshold
          noDataState: OK
          execErrState: OK
          for: 15m
          annotations:
            description: KubeScheduler has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown
            summary: Target disappeared from Prometheus target discovery.
          labels:
            __converted_prometheus_rule__: "true"
            severity: critical
          isPaused: false
          missing_series_evals_to_resolve: 1
