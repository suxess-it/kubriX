{{- range $team := .Values.teams }}
{{- range $repo := $team.sourceRepos }}
{{/* break loop if source repo is '*' because then it makes no sense to generate a credential template */}}
{{- if eq $repo "*" }}
{{- break -}}
{{- end -}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $team.name }}-{{ lower (substr 0 8 ($repo | b64enc)) }}-credential-template
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: {{ $team.name }}-{{ lower (substr 0 8 ($repo | b64enc)) }}-credential-template
    template:
      metadata:
        annotations:
          managed-by: argocd.argoproj.io
        labels:
          argocd.argoproj.io/secret-type: repo-creds
      data:
        password: "{{ `{{ .KUBRIX_ARGOCD_APPSET_TOKEN }}` }}"
        username: "dummy"
        url: {{ quote (trimSuffix "*" $repo) }}
  data:
  - secretKey: KUBRIX_ARGOCD_APPSET_TOKEN
    remoteRef:
      key: kubrix-kv/data/{{ $team.name }}/delivery
      property: KUBRIX_ARGOCD_APPSET_TOKEN
---
{{- end }}
{{- end }}

