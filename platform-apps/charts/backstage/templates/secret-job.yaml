apiVersion: batch/v1
kind: Job
metadata:
  generateName: backstage-token-creator-
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: backstage-token-creator
      containers:
      - name: backstage-token-creator
        image: bitnami/kubectl
        command:
          - "bin/bash"
          - "-c"
          - |
            ARGOCD_AUTH_TOKEN="$( kubectl exec sx-argocd-application-controller-0 -n argocd -- argocd account generate-token --account backstage --core )"
            GRAFANA_HOSTNAME=$(kubectl get ingress -o jsonpath='{.items[*].spec.rules[*].host}' -n grafana )
            if [ "${GRAFANA_HOSTNAME}" != "" ]; then
              ID=$( curl -k -X POST https://${GRAFANA_HOSTNAME}/api/serviceaccounts --user 'admin:prom-operator' -H "Content-Type: application/json" -d '{"name": "backstage","role": "Viewer","isDisabled": false}' | jq -r .id )
              GRAFANA_TOKEN=$(curl -k -X POST https://${GRAFANA_HOSTNAME}/api/serviceaccounts/${ID}/tokens --user 'admin:prom-operator' -H "Content-Type: application/json" -d '{"name": "backstage"}' | jq -r .key)
            fi
  
            # get backstage-locator token for backstage secret
            K8S_SA_TOKEN=$( kubectl get secret backstage-locator -n backstage  -o jsonpath='{.data.token}' | base64 -d )

            kubectl create secret generic -n backstage access-token-secret \
              --from-literal=K8S_SA_TOKEN=${K8S_SA_TOKEN} \
              --from-literal=ARGOCD_AUTH_TOKEN=${ARGOCD_AUTH_TOKEN} \
              --from-literal=GRAFANA_TOKEN=${GRAFANA_TOKEN}
      restartPolicy: Never
