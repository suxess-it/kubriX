vault:
  server:
    ingress:
      hosts:
        - host: vault.{{ .kubriX.domain }}
          paths: []
      tls: 
        - secretName: vault-server-tls
          hosts:
            - vault.{{ .kubriX.domain }}
    extraInitContainers:
      - name: utility-downloader
        image: alpine/curl:latest
        command: 
        - /bin/sh
        - -c
        - | 
            cd /usr/local/libexec/vault
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            curl -L -o jq https://github.com/stedolan/jq/releases/download/jq-1.8.1/jq-linux64
            chmod +x jq
        volumeMounts:
          - name: plugins
            mountPath: /usr/local/libexec/vault
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
      {{- if eq .kubriX.clusterType "kind" }}
      # only for kind cluster with mkcert root ca
      - name: combine-system-and-keycloak-ca
        image: hashicorp/vault:1.20.3              # same base as server to get the original ca-certificates.crt
        command: ["/bin/sh","-c"]
        args:
          - |
            set -euo pipefail
            # Start with the system bundle from the base image
            cat /etc/ssl/certs/ca-certificates.crt > /vault/kind-bundle-ca/combined-bundle.crt
            # Append your Keycloak CA(s) if present
            if ls /keycloak-ca/*.crt >/dev/null 2>&1; then
              cat /keycloak-ca/*.crt >> /vault/kind-bundle-ca/combined-bundle.crt
            fi
        volumeMounts:
          - name: ca-bundle
            mountPath: /vault/kind-bundle-ca
          - name: keycloak-ca
            mountPath: /keycloak-ca
            readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
      {{- end }}
    {{- if eq .kubriX.clusterType "kind" }}
    extraEnvironmentVars:
      SSL_CERT_FILE: /vault/kind-bundle-ca/combined-bundle.crt
    {{- end }}
    volumes:
      - name: plugins
        emptyDir: {}
      - name: vault-root-token
        secret:
          secretName: vault-init
          optional: true 
      {{- if eq .kubriX.clusterType "kind" }}
      - name: vault-ca-cert
        secret:
          defaultMode: 420
          secretName: ca-cert
      # only for kind cluster with mkcert root ca
      - name: keycloak-ca
        secret:
          defaultMode: 420
          secretName: ca-cert
      - name: ca-bundle
        emptyDir: {}
      {{- end }}
    volumeMounts:
      - mountPath: /usr/local/libexec/vault
        name: plugins
        readOnly: false
      {{- if eq .kubriX.clusterType "kind" }}
      - mountPath: /vault/userconfig/vault-ca
        name: vault-ca-cert
        readOnly: true
      # only for kind cluster with mkcert root ca
      - name: keycloak-ca
        mountPath: /keycloak-ca
        readOnly: true
      - name: ca-bundle
        mountPath: /vault/kind-bundle-ca
      {{- end }}