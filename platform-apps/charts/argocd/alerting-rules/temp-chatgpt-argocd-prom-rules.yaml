apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: argocd-self-health
  labels:
    app.kubernetes.io/part-of: argocd
spec:
  groups:
  - name: argocd-self-health.rules
    rules:
    # --- Component up/down (per pod/job) ---
    - alert: ArgoCDComponentDown
      expr: up{job=~"argocd-(application-controller|server|repo-server|commit-server)-metrics"} == 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "Argo CD component down: {{ $labels.job }} (pod {{ $labels.pod }})"
        description: "{{ $labels.job }} is not exposing metrics for 5m."

    # --- Controller cache stale (controller can't keep up with watches) ---
    - alert: ArgoCDControllerClusterCacheStale
      expr: max by(pod) (argocd_cluster_cache_age_seconds) > 300
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Argo CD controller cache stale"
        description: "Cluster cache age > 5m; controller may be lagging behind the API server."

    # --- Repo-server backlog (lock contention / queue stuck) ---
    - alert: ArgoCDRepoPendingRequestsHigh
      expr: max by(pod) (argocd_repo_pending_request_total) > 50
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Argo CD repo-server backlog high"
        description: "Pending repo lock requests > 50 for 10m. Investigate slow Git/Redis."

    # --- Repo-server Git fetch failures ---
    - alert: ArgoCDRepoGitFetchFailures
      expr: rate(argocd_git_fetch_fail_total[5m]) > 0
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Argo CD repo-server Git fetch failures"
        description: "Non-zero rate of git fetch failures over the last 5m."

    # --- Redis failures (any Argo CD component) ---
    - alert: ArgoCDRedisFailures
      expr: sum by(initiator) (rate(argocd_redis_request_total{failed="true"}[5m])) > 0
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Argo CD Redis failures ({{ $labels.initiator }})"
        description: "Redis request failures observed by {{ $labels.initiator }}."

    # --- API server -> K8s errors (client-go / kubectl path) ---
    - alert: ArgoCDServerKubernetesErrorsHigh
      expr: |
        (
          sum(rate(argocd_kubectl_requests_total{initiator="argocd-server",response_code=~"5.."}[5m]))
        /
          clamp_min(sum(rate(argocd_kubectl_requests_total{initiator="argocd-server"}[5m])), 1)
        ) > 0.05
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Argo CD API server Kubernetes error rate >5%"
        description: "High server-side error rate talking to Kubernetes over last 5m."

    # --- Destination cluster connection lost (as seen by controller) ---
    - alert: ArgoCDClusterConnectionLost
      expr: argocd_cluster_connection_status == 0
      for: 15m
      labels:
        severity: critical
      annotations:
        summary: "Argo CD lost connection to a managed cluster"
        description: "Cluster connection status is '0' (disconnected). Labels include the target cluster."

    # --- Commit server backlog (if you use it) ---
    - alert: ArgoCDCommitServerBacklog
      expr: max by(pod) (argocd_commitserver_commit_pending_request_total) > 0
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Argo CD commit-server backlog"
        description: "Pending commit requests are queued for >10m."
