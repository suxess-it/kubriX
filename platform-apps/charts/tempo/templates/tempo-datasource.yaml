apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "tempo.fullname" .Subcharts.tempo }}-datasource
  labels:
    grafana_datasource: "1"
data:
  tempo-datasource.yaml: |-
    apiVersion: 1
    datasources:
    - name: tempo
      type: tempo
      uid: tempo
      basicAuth: false
      url: http://{{ template "tempo.fullname" .Subcharts.tempo }}:3100
      access: proxy
      isDefault: false
      jsonData:
        tracesToLogsV2:
          # Field with an internal link pointing to a logs data source in Grafana.
          # datasourceUid value must match the uid value of the logs data source.
          datasourceUid: 'loki'
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
          tags: ['job', 'instance', 'pod', 'namespace']
          filterByTraceID: false
          filterBySpanID: false
          customQuery: true
          query: 'method="${__span.tags.method}"'
        tracesToMetrics:
          datasourceUid: 'prometheus'
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
          tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
          queries:
            - name: 'Sample query'
              query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
        tracesToProfiles:
          datasourceUid: 'grafana-pyroscope-datasource'
          tags: ['job', 'instance', 'pod', 'namespace']
          profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
          customQuery: true
          query: 'method="${__span.tags.method}"'
        serviceMap:
          datasourceUid: 'prometheus'
        nodeGraph:
          enabled: true
        search:
          hide: false
        lokiSearch:
          datasourceUid: 'loki'
        traceQuery:
          timeShiftEnabled: true
          spanStartTimeShift: '1h'
          spanEndTimeShift: '-1h'
        spanBar:
          type: 'Tag'
          tag: 'http.path'
        httpMethod: GET
