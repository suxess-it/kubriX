apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  annotations:
    description: {{ .Values.description }}
  name: {{ .Values.application_id }}
  labels:
    backstage.io/kubernetes-id: {{ .Values.application_id }}
    app: {{ .Values.application_id }}
    kubevirt.io/dynamic-credentials-support: 'true'
    vm.kubevirt.io/template:  server-small #to get default values
spec:
  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/os: {{ .Values.os }} # min. 1 annotation needed
      creationTimestamp: null
      labels:
#        kubevirt.io/size: small
        kubevirt.io/domain: {{ .Values.application_id }}
        app: {{ .Values.application_id }}
        backstage.io/kubernetes-id: {{ .Values.application_id }}
    spec:
      architecture: amd64
      domain:
        clock:
          utc: {}
        features:
          acpi: {}
          apic: {}
        cpu:
          cores: {{ .Values.cores }}
        devices:
          disks:
            - name: root-disk
              disk:
                bus: virtio
            - disk:
                bus: virtio
              name: cloudinitdisk
          interfaces:
            - masquerade: {}
              model: virtio
              name: default
          networkInterfaceMultiqueue: true
        resources:
          requests:
            memory: {{ .Values.memory }}
          limits:
            memory: {{ .Values.memory }}
      networks:
        - name: default
          pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
      - dataVolume:
          name: {{ .Values.application_id }}
        name: root-disk
      - name: cloudinitdisk
        cloudInitConfigDrive:
          userData: |-
            #cloud-config
            user: cloud-user
            password: {{ .Values.initpwd }}
            chpasswd: { expire: False }
            ssh_pwauth: 1
            {{- if .Values.sshkey }}
            ssh_authorized_keys:
              - .Values.sshkey
            {{- end }}
            locale: de_DE
            keyboard:
              layout: de
  dataVolumeTemplates:
  - metadata:
      name: {{ .Values.application_id }}
    spec:
      storage:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.disk }}
      source:
        pvc:
          namespace: kubevirt
          name: {{ .Values.os }}